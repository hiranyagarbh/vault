#!/usr/bin/env bash

BATCH_SIZE=1

fatal() {
    echo '[FATAL]' "@" >&2
    exit 1
}

progress-bar() {
    local current=$1
    local len=$2
    local bar_char='|'
    local empty_char='.'
    local percent_done=$((current*100/len))

    local suffix=" $current/$len ($percent_done%)"
    local length=$((COLUMNS - ${#suffix} - 2))
    local num_bars=$((percent_done * length / 100))

    local i
    local s='['
    for ((i=0; i<num_bars; i++))
    do
        s+=$'\e[32m'$bar_char$'\e[0m'
    done
    for ((i=num_bars; i<length; i++))
    do
        s+=$empty_char
    done
    s+=']'
    s+=$suffix

    printf '\e7'                                # save the cursor loc
        printf '\e[%d;%dH' "$LINES" 0           # move to the bottom line
        printf '\e[0K'                          # clear the line
        printf '%s' "$s"                        # print the progress bar
    printf '\e8'                                # restore the cursor loc
}

# TODO FIX: resizing terminal window w running process breaks the logic

init-term () {
    printf '\n'                                     # ensure we have space for the progress bar
        printf  '\e7'                               # save the cursor loc
            printf  '\e[%d;%dr' 0 "$((LINES-1))"    # set the scrollable region (margin)
        printf  '\e8'                               # restore the cursor loc
    printf  '\e[1A'                                 # move cursor up one line
}

deinit-term () {
    printf  '\e7'                               # save the cursor loc
        printf  '\e[%d;%dr' 0 "$LINES"          # reset the scrollable region (margin)
        printf '\e[%d;%dH' "$LINES" 0           # move cursor to bottom line and clear line
        printf '\e[0K'                          # clear the line
    printf  '\e8'                               # reset the cursor loc
}

main() {
    local OPTARG OPTIND opt
    while getopts ":b:" opt; do
        case $opt in
            b) BATCH_SIZE=$OPTARG;;
            *) fatal 'Bad option';;
        esac
    done

    shopt -s globstar nullglob
    LINES=$(tput lines)
    COLUMNS=$(tput cols)

    trap deinit-term exit
    init-term

    process-files() {
        local files=("$@")
        echo "Processing batch of ${#files[@]} files..."


        local file
        for file in "${files[@]}"; do
            echo "-> $file..."
        done
        sleep 0.1
    }



    echo "Finding cache files..."
    local files=(./**/*cache)
    local len=${#files[@]}
    echo "Found $len files."


    local i
    for ((i=0; i<len; i+=BATCH_SIZE))
    do
        progress-bar "$((i+1))" "$len"
        process-files "${files[@]:i:$BATCH_SIZE}"
    done
    progress-bar "$len" "$len"
}

main "$@"
