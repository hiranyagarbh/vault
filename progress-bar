#!/usr/bin/env bash

BATCH_SIZE=1

fatal() {
    echo '[FATAL]' "@" >&2
    exit 1
}

progress-bar() {
    local current=$1
    local len=$2

    local length=50
    percent_done=$((current*100/len))
    local num_bars=$((percent_done * length / 100))

    local i
    local bar_char='|'
    local empty_char='.'
    local s='['
    for ((i=0; i<num_bars; i++))
    do
        s+=$'\e[32m'$bar_char$'\e[0m'
    done
    for ((i=num_bars; i<length; i++))
    do
        s+=$empty_char
    done
    s+=']'

    echo -ne "\r$s $current/$len ($percent_done%)"
}

main() {
    local OPTARG OPTIND opt
    while getopts ":b:" opt; do
        case $opt in
            b) BATCH_SIZE=$OPTARG;;
            *) fatal 'Bad option';;
        esac
    done

    process-files() {
        local files=("$@")
        echo "Processing batch of ${#files[@]} files..."
        sleep 0.01
    }

    shopt -s globstar nullglob

    echo "Finding cache files..."
    local files=(./**/*cache)
    local len=${#files[@]}
    echo "Found $len files."


    local i
    for ((i=0; i<len; i+=BATCH_SIZE))
    do
        progress-bar "$((i+1))" "$len"
        process-files "${files[@]:i:$BATCH_SIZE}"
    done
    progress-bar "$len" "$len"

    echo
}

main "$@"
